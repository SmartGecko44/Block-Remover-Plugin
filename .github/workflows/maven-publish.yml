name: Maven Package

on:
  push:
    branches:
      - master
      - mirror
  pull_request:
    branches:
      - master
      - experimental
  release:
    types:
      - prereleased
      - created
      - published
      - edited

jobs:
  build:
    runs-on:
      - ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '8'

      - name: Create Target Directory
        run: mkdir -p target

      - name: Build with Maven
        run: mvn verify --file ../pom.xml
        working-directory: target

      - name: Create filtered-artifacts
        run: mkdir -p filtered-artifacts

      - name: Filter and Upload JAR as an artifact
        run: |
          # Filter out files that start with 'Wauh' and upload the rest
          find target -type f -name Wauh*.jar -exec cp {} filtered-artifacts/ \;

      - name: Upload JAR as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: Wauh-${{ github.run_number }}
          path: filtered-artifacts
          if-no-files-found: error

  qodana-scan:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2023.3
        with:
          pr-mode: false
          args: --baseline,qodana.sarif.json
          push-fixes: pull-request
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          QODANA_BRANCH: ${GITHUB_REF_NAME}
          fail-threshold: 5

      - name: Upload Qodana results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ runner.temp }}/qodana/results/qodana.sarif.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}